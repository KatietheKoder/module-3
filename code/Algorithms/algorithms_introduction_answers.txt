1. Using proper pseudo-code, describe the following primitive algorithms:

-Making coffee;
IF there is no filter
    ADD filter
ELSE
     REPEAT
        ADD coffee to filter
    UNTIL desired amount is achieved
    REPEAT
        ADD water to water container
    UNTIL desired amount is achieved
    PRESS button to start coffee maker
ENDIF


-Washing dishes;
PRERINSE
        IF dirty dishes > 0
            FILL sink with water
            ADD soap
            WHILE dirty dishes > 0
                ADD dirty dishes to sink
            ENDWHILE
        ENDIF

SCRUBBING
    WHILE dirty dishes > 0
        FOR each dish
            SCRUB dish with sponge
            ADD dish to rinse pile
        ENDFOR
    ENDWHILE

RINSING
WHILE rinse pile > 0
        FOR each dish
            RINSE dish with cold water
            ADD dish to dry rack
        ENDFOR
    ENDWHILE

A choice of your own.
-Doing laundry

DARK CLOTHES
IF dark clothes > 0
    FILL washer with dirty clothes
    ADD detergent
     SET to cold wash
    WHILE dark clothes > 0
     WAIT until done
   PUT in dryer when done
    ENDWHILE
ENDIF

LIGHT CLOTHES
IF light clothes > 0
    FILL washer with light clothes
    ADD detergent
     SET to hot wash
    WHILE light clothes > 0
     WAIT until done
   PUT in dryer when done
    ENDWHILE
ENDIF



2. As with the knot algorithm, there may be more than one way to solve the problem.
It is essential to try to pick the best algorithm for a situation. Name three companies who
created an algorithm that made them successful, e.g., Google's search algorithm. It doesn't need to be a tech example
(such as a recipe or manufacturing a product). Google's algorithm produces more relevant results than other search engines;
what about each of your cases make them stand out?

-Facebook's algorithm ranks all available posts that can display on a userâ€™s News Feed based on how likely that user will have a positive reaction.
-Instagram's algorithm is based on interest, recency, and relationship
-Amazon's recommended item algorithm

3. Hypothesize about what constitutes an efficient algorithm versus an inefficient algorithm.

An algorithm is efficient if it:
An algorithm is efficient if it:
-is able to minimize the number of steps needed to complete
-is very clear and easy to understand
-is able to accomplish a given goal with consistency and accuracy
